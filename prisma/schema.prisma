// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  name          String
  stripeId      String?
  subscriptions subscriptions[]
  payments      payments[]
  accessPeriods accessPeriods[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model subscriptions {
  id          Int        @id @default(autoincrement())
  userId      Int
  user        users      @relation(fields: [userId], references: [id])
  stripeSubId String     @unique
  status      String
  interval    String
  startDate   DateTime
  endDate     DateTime?
  payments    payments[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model payments {
  id              Int           @id @default(autoincrement())
  userId          Int
  user            users         @relation(fields: [userId], references: [id])
  subscriptionId  Int
  subscription    subscriptions @relation(fields: [subscriptionId], references: [id])
  stripePaymentId String        @unique
  amount          Float
  status          String
  createdAt       DateTime      @default(now())
}

model accessPeriods {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  user      users    @relation(fields: [userId], references: [id])
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
}
